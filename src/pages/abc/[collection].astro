---
import Layout from '../../layouts/Layout.astro';
import fs from 'node:fs';
import path from 'node:path';
import { fileURLToPath } from 'node:url';

const { collection } = Astro.params;

// Pre-render available collection routes
export async function getStaticPaths() {
  return [
    { params: { collection: 'old-time-jam-tunes' } },
    { params: { collection: 'irish-session-top100' } },
    { params: { collection: 'mandolin-cafe-bluegrass' } },
    { params: { collection: 'open-hymnal' } },
    { params: { collection: 'roaring-jelly-2024' } },
  ];
}

const filenameMap: Record<string, string> = {
  'old-time-jam-tunes': 'old_time_jam_tunes_collection.abc',
  'irish-session-top100': 'irish_session_top100_collection.abc',
  'mandolin-cafe-bluegrass': 'mando_cafe_bluegrass.abc',
  'open-hymnal': 'open_hymnal_collection.abc',
  'roaring-jelly-2024': 'roaring_jelly_collection.abc'
};

const searchRoots = [
  '../../../public/collections',
  '../../../../jb_android/app/src/main/assets/tunes',
  '../../../../jb_ios/jb_ios/Resources/Tunes'
];

const titleMap: Record<string, string> = {
  'old-time-jam-tunes': 'Old-Time',
  'irish-session-top100': 'The Session',
  'mandolin-cafe-bluegrass': 'Mandolin Cafe Intermediate Bluegrass',
  'open-hymnal': 'Open Hymnal',
  'roaring-jelly-2024': 'Roaring Jelly Old-Time'
};

const currentDir = fileURLToPath(new URL('.', import.meta.url));

function loadCollection(slug: string) {
  const filename = filenameMap[slug];
  if (!filename) {
    return { content: null as string | null, attempts: [] as string[], source: null as string | null };
  }

  const attempts: string[] = [];

  for (const root of searchRoots) {
    const candidate = path.resolve(currentDir, root, filename);
    if (!attempts.includes(candidate)) {
      attempts.push(candidate);
    }

    if (!fs.existsSync(candidate)) {
      continue;
    }

    try {
      const content = fs.readFileSync(candidate, 'utf8');
      return { content, attempts, source: candidate };
    } catch (error) {
      const message = error instanceof Error ? error.message : String(error);
      attempts[attempts.length - 1] = `${candidate} (read failed: ${message})`;
    }
  }

  return { content: null as string | null, attempts, source: null as string | null };
}

const slug = collection! as string;
const { content: abcText, attempts: attemptedPaths } = loadCollection(slug);

const pageTitle = titleMap[slug] ?? 'ABC Collection';
---

<Layout title={`${pageTitle} ‚Äì ABC Collection`} description={`View and edit the ${pageTitle} ABC collection in your browser.`} fullWidth>
  <section data-abc-collection={slug} class="w-full px-2 sm:px-4 lg:px-6 xl:px-10 2xl:px-16 py-10 min-h-screen">
    <div class="flex items-center gap-3 mb-6">
      <a href="/abc" class="text-sm text-gray-300 hover:underline">‚Üê Back to ABC</a>
      <h1 class="text-3xl font-bold text-white">{pageTitle}</h1>
    </div>

    {abcText ? (
      <>
  <div class="grid grid-cols-1 gap-6 lg:grid-cols-[minmax(420px,1.9fr)_minmax(520px,1.15fr)] xl:grid-cols-[minmax(440px,1.95fr)_minmax(560px,1.05fr)] min-h-[calc(100vh-240px)]">
          <!-- Left column: selection + controls + rendered song -->
          <div class="lg:col-span-1 flex flex-col space-y-3 min-h-[calc(100vh-260px)]">
            <div class="rounded border border-gray-700 bg-gray-800 p-3" data-ignore-print>
              <div class="flex flex-wrap items-center gap-3">
                <div class="flex items-center gap-2">
                  <button id="prevTune" class="rounded bg-gray-700 px-2 py-1 text-white" title="Previous tune" type="button">&#9664;</button>
                  <select id="tuneSelect" data-collection={slug} class="min-w-0 flex-1 rounded border border-gray-700 bg-black p-2 text-sm text-gray-200"></select>
                  <button id="nextTune" class="rounded bg-gray-700 px-2 py-1 text-white" title="Next tune" type="button">&#9654;</button>
                  <button data-print-trigger class="rounded bg-gray-700 p-2 text-white hover:bg-gray-600" title="Print tune" aria-label="Print tune" type="button">
                    üñ®Ô∏è
                  </button>
                </div>
              </div>
            </div>

            <details class="group rounded border border-gray-700 bg-gray-900/70 px-4 py-3 text-gray-200" data-ignore-print>
              <summary class="flex cursor-pointer items-center justify-between gap-3 text-sm font-semibold uppercase tracking-wide text-gray-300 transition group-open:text-white">
                Playback &amp; Controls
                <span class="text-xs font-medium text-gray-400 group-open:text-blue-300">Toggle</span>
              </summary>
              <div class="mt-4 space-y-3">
                <div class="rounded border border-gray-700 bg-gray-800 p-3">
                  <div class="flex flex-wrap items-center gap-3">
                    <div class="flex items-center gap-2">
                      <button id="transposeDown" class="rounded bg-gray-700 px-2 py-1 text-white" title="Transpose down">&#9837;</button>
                      <span id="currentKeyLabel" class="min-w-[2ch] text-center font-semibold text-gray-100">K?</span>
                      <button id="transposeUp" class="rounded bg-gray-700 px-2 py-1 text-white" title="Transpose up">&#9839;</button>
                    </div>
                    <div class="flex flex-wrap items-center gap-3">
                      <div class="flex items-center gap-2">
                        <input id="tempoSlider" type="range" min="40" max="220" value="120" class="w-20" />
                        <span id="tempoLabel" class="text-sm text-gray-300">120 BPM</span>
                      </div>
                      <label class="flex items-center gap-2 text-sm text-gray-300">
                        Render height
                        <input id="renderScale" type="range" min="20" max="100" value="60" class="w-28" />
                        <span id="renderScaleLabel" class="text-sm text-gray-300">60%</span>
                      </label>
                    </div>
                    <div class="flex flex-wrap items-center gap-2">
                      <button id="playToggle" class="rounded bg-green-600 px-3 py-1 text-white hover:bg-green-500">Play</button>
                      <button
                        id="playbackModeToggle"
                        class="rounded bg-blue-600 px-3 py-1 text-white hover:bg-blue-500"
                        title="Playback Mode: Chords + Melody"
                        type="button"
                      >
                        üéµ Mixed
                      </button>
                      <button
                        id="highlightToggle"
                        class="rounded border border-amber-500 px-3 py-1 text-amber-400 hover:bg-amber-500 hover:text-black"
                        aria-pressed="false"
                        type="button"
                      >
                        Highlight notes: Off
                      </button>
                      <div class="flex items-center gap-2">
                        <button
                          id="metronomeToggle"
                          class="rounded border border-blue-400 px-3 py-1 text-blue-200 transition hover:bg-blue-500/20 hover:text-white"
                          aria-pressed="false"
                          type="button"
                        >
                          Metronome: Off
                        </button>
                        <span id="metronomeDisplay" class="min-w-[4ch] text-xs font-semibold text-blue-200 opacity-60"></span>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="rounded border border-gray-700 bg-gray-800 p-3">
                  <label class="mb-2 block text-sm text-gray-300">Tablature layer</label>
                  <select id="layerSelect" class="w-full rounded border border-gray-700 bg-black p-2 text-sm text-gray-200">
                    <option value="none">None (Staff only)</option>
                    <option value="guitar">Guitar</option>
                    <option value="mandolin">Mandolin</option>
                    <option value="ukulele">Ukulele</option>
                    <option value="baritone">Baritone Ukulele</option>
                  </select>
                  <label class="mt-2 block text-sm text-gray-300"><input id="stripChords" type="checkbox" class="mr-2" /> Strip quoted chords for tabs</label>
                </div>
              </div>
            </details>

        <div class="flex-1 rounded border border-gray-800 bg-gray-900 p-3 abc-print-target">
          <div id="paper" class="h-full min-h-[60vh] md:min-h-[calc(100vh-320px)]"></div>
        </div>
          </div>

          <!-- Middle column: ABC editor -->
          <div class="lg:col-span-1 flex flex-col space-y-2 min-h-[calc(100vh-260px)]" data-ignore-print>
            <div class="flex justify-end gap-2 flex-wrap">
              <div class="flex gap-2">
                <button id="exportTuneAbc" class="px-3 py-1 bg-gray-700 text-white rounded" title="Export selected tune as .abc">Tune .abc</button>
                <button id="exportFullAbc" class="px-3 py-1 bg-gray-700 text-white rounded" title="Export full collection as .abc">Full .abc</button>
                <button id="printSheet" data-print-trigger type="button" class="px-3 py-1 bg-gray-700 text-white rounded" title="Print the rendered sheet music">Print</button>
                <button id="exportPng" class="px-3 py-1 bg-gray-700 text-white rounded" title="Export rendered sheet as .png">PNG</button>
                <button id="exportMidi" class="px-3 py-1 bg-gray-700 text-white rounded" title="Export MIDI">MIDI</button>
              </div>
            </div>
            <textarea id="abcInput" class="w-full flex-1 min-h-0 p-3 font-mono text-sm rounded bg-black text-gray-200 border border-gray-700 resize-none">{abcText}</textarea>
          </div>

          <!-- Right column removed: simplified to two-column layout -->
        </div>
      </>
    ) : (
      <div class="p-4 rounded bg-red-900/40 border border-red-800 text-red-200">
        <p class="font-semibold">Failed to load the ABC source file.</p>
        <p class="mt-2 text-sm">
          Ensure the collection .abc files are present in <code>/public/collections</code> when building the website.
        </p>
        {attemptedPaths.length > 0 && (
          <details class="mt-3 text-xs text-red-100/80">
            <summary class="cursor-pointer text-red-100">Paths checked</summary>
            <ul class="mt-2 space-y-1">
                {attemptedPaths.map((p, idx) => (
                <li>
                  <code>{p}</code>
                </li>
              ))}
            </ul>
          </details>
        )}
      </div>
    )}
  </section>

  <script src="https://cdn.jsdelivr.net/npm/abcjs@6.4.4/dist/abcjs-basic-min.js" defer></script>
  <script src="https://cdn.jsdelivr.net/npm/abcjs@6.4.4/dist/abcjs-midi-min.js" defer></script>
  <style>
    /* Current note highlight */
    #paper .abc-current-note {
      fill: #f59e0b !important;
      stroke: #f59e0b !important;
      opacity: 0.95;
    }
    #paper .abc-current-note path,
    #paper .abc-current-note polygon,
    #paper .abc-current-note polyline,
    #paper .abc-current-note use,
    #paper .abc-current-note ellipse,
    #paper .abc-current-note circle,
    #paper .abc-current-note rect {
      fill: #f59e0b !important;
      stroke: #f59e0b !important;
    }
    @media print {
      body.abc-printing * {
        display: none !important;
      }
      body.abc-printing [data-ignore-print] {
        display: none !important;
      }
      body.abc-printing .abc-print-target,
      body.abc-printing .abc-print-target * {
        display: block !important;
        visibility: visible !important;
      }
      body.abc-printing .abc-print-target {
        position: static !important;
        margin: 0 auto !important;
        padding: 0 !important;
        box-shadow: none !important;
        border: none !important;
        background: transparent !important;
      }
      body.abc-printing #paper {
        margin: 0 auto;
      }
    }
  </style>
  <script src="/abc/viewer.js" defer></script>
  <script src="/abc/init-viewer.js" defer></script>
</Layout>
